// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//making model here for our app

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  name         String
  avatar       String?
  username     String    @unique
  password     String
  refreshToken String?
  Post         Post[] //one to many relation as user can have multiple post
  comment      Comment[] // one to many relation as user can add multiple comment
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

//Post model
model Post {
  postId      String    @id @default(uuid())
  title       String
  description String
  postImage   String?
  published   Boolean   @default(false)
  author      User      @relation(fields: [authorId], references: [id]) //making refrence with our User model
  authorId    String
  comment     Comment[] //one to many as one post can havemany comments related to it
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  //can also make unique field for title and description to avlid duplicate post
}

//Commentmodel
model Comment {
  commentId String   @id @default(uuid())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post     @relation(fields: [postId], references: [postId])
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
